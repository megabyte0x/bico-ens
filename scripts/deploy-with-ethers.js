//load 'ethers' and 'fs'
const ethers = require('ethers');
    
//Read bin and abi file to object; names of the solcjs-generated files renamed
bytecode = "0x60806040523480156200001157600080fd5b5060405162001e4938038062001e498339818101604052810190620000379190620004b6565b81600090805190602001906200004f92919062000129565b5060005b8151811015620000e75760018060008484815181106200007857620000776200053b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080620000de90620005a3565b91505062000053565b507fab0b9cc3a46b568cb08d985497cde8ab7e18892d01f58db7dc7f0d2af859b2d781604051620001199190620006bf565b60405180910390a1505062000748565b828054620001379062000712565b90600052602060002090601f0160209004810192826200015b5760008555620001a7565b82601f106200017657805160ff1916838001178555620001a7565b82800160010185558215620001a7579182015b82811115620001a657825182559160200191906001019062000189565b5b509050620001b69190620001ba565b5090565b5b80821115620001d5576000816000905550600101620001bb565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200024282620001f7565b810181811067ffffffffffffffff8211171562000264576200026362000208565b5b80604052505050565b600062000279620001d9565b905062000287828262000237565b919050565b600067ffffffffffffffff821115620002aa57620002a962000208565b5b620002b582620001f7565b9050602081019050919050565b60005b83811015620002e2578082015181840152602081019050620002c5565b83811115620002f2576000848401525b50505050565b60006200030f62000309846200028c565b6200026d565b9050828152602081018484840111156200032e576200032d620001f2565b5b6200033b848285620002c2565b509392505050565b600082601f8301126200035b576200035a620001ed565b5b81516200036d848260208601620002f8565b91505092915050565b600067ffffffffffffffff82111562000394576200039362000208565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003d782620003aa565b9050919050565b620003e981620003ca565b8114620003f557600080fd5b50565b6000815190506200040981620003de565b92915050565b600062000426620004208462000376565b6200026d565b905080838252602082019050602084028301858111156200044c576200044b620003a5565b5b835b81811015620004795780620004648882620003f8565b8452602084019350506020810190506200044e565b5050509392505050565b600082601f8301126200049b576200049a620001ed565b5b8151620004ad8482602086016200040f565b91505092915050565b60008060408385031215620004d057620004cf620001e3565b5b600083015167ffffffffffffffff811115620004f157620004f0620001e8565b5b620004ff8582860162000343565b925050602083015167ffffffffffffffff811115620005235762000522620001e8565b5b620005318582860162000483565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000620005b08262000599565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620005e657620005e56200056a565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6200062881620003ca565b82525050565b60006200063c83836200061d565b60208301905092915050565b6000602082019050919050565b60006200066282620005f1565b6200066e8185620005fc565b93506200067b836200060d565b8060005b83811015620006b25781516200069688826200062e565b9750620006a38362000648565b9250506001810190506200067f565b5085935050505092915050565b60006020820190508181036000830152620006db818462000655565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200072b57607f821691505b60208210811415620007425762000741620006e3565b5b50919050565b6116f180620007586000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a7146100675780631dcfea09146100975780635600f04f146100c7578063736c0d5b146100e55780639061b92314610115578063f4d4d2f814610145575b600080fd5b610081600480360381019061007c91906109f0565b610175565b60405161008e9190610a38565b60405180910390f35b6100b160048036038101906100ac9190610c37565b6101ef565b6040516100be9190610cef565b60405180910390f35b6100cf610207565b6040516100dc9190610d92565b60405180910390f35b6100ff60048036038101906100fa9190610db4565b610295565b60405161010c9190610a38565b60405180910390f35b61012f600480360381019061012a9190610e41565b6102b5565b60405161013c9190610f17565b60405180910390f35b61015f600480360381019061015a9190610e41565b610480565b60405161016c9190610f17565b60405180910390f35b60007f9061b923000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101e857506101e78261052e565b5b9050919050565b60006101fd85858585610598565b9050949350505050565b6000805461021490610f68565b80601f016020809104026020016040519081016040528092919081815260200182805461024090610f68565b801561028d5780601f106102625761010080835404028352916020019161028d565b820191906000526020600020905b81548152906001019060200180831161027057829003601f168201915b505050505081565b60016020528060005260406000206000915054906101000a900460ff1681565b60606000639061b92360e01b868686866040516024016102d89493929190610fc7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000600167ffffffffffffffff81111561035457610353610b0c565b5b60405190808252806020026020018201604052801561038757816020015b60608152602001906001900390816103725790505b5090506000805461039790610f68565b80601f01602080910402602001604051908101604052809291908181526020018280546103c390610f68565b80156104105780601f106103e557610100808354040283529160200191610410565b820191906000526020600020905b8154815290600101906020018083116103f357829003601f168201915b50505050508160008151811061042957610428611002565b5b602002602001018190525030818363f4d4d2f860e01b856040517f556f183000000000000000000000000000000000000000000000000000000000815260040161047795949392919061115b565b60405180910390fd5b6060600080610491858589896105df565b91509150600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051890611235565b60405180910390fd5b8092505050949350505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008484848051906020012084805190602001206040516020016105bf949392919061134b565b604051602081830303815290604052805190602001209050949350505050565b60006060600080600086868101906105f791906113a4565b925092509250600061065861065230858d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505088610598565b836106ba565b9050428367ffffffffffffffff1610156106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e906114a1565b60405180910390fd5b8084955095505050505094509492505050565b60008060006106c985856106e1565b915091506106d681610733565b819250505092915050565b6000806041835114156107235760008060006020860151925060408601519150606086015160001a9050610717878285856108a1565b9450945050505061072c565b60006002915091505b9250929050565b60006004811115610747576107466114c1565b5b81600481111561075a576107596114c1565b5b14156107655761089e565b60016004811115610779576107786114c1565b5b81600481111561078c5761078b6114c1565b5b14156107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c49061153c565b60405180910390fd5b600260048111156107e1576107e06114c1565b5b8160048111156107f4576107f36114c1565b5b1415610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c906115a8565b60405180910390fd5b60036004811115610849576108486114c1565b5b81600481111561085c5761085b6114c1565b5b141561089d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108949061163a565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156108dc57600060039150915061097b565b6000600187878787604051600081526020016040526040516109019493929190611676565b6020604051602081039080840390855afa158015610923573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109725760006001925092505061097b565b80600092509250505b94509492505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6109cd81610998565b81146109d857600080fd5b50565b6000813590506109ea816109c4565b92915050565b600060208284031215610a0657610a0561098e565b5b6000610a14848285016109db565b91505092915050565b60008115159050919050565b610a3281610a1d565b82525050565b6000602082019050610a4d6000830184610a29565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7e82610a53565b9050919050565b610a8e81610a73565b8114610a9957600080fd5b50565b600081359050610aab81610a85565b92915050565b600067ffffffffffffffff82169050919050565b610ace81610ab1565b8114610ad957600080fd5b50565b600081359050610aeb81610ac5565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b4482610afb565b810181811067ffffffffffffffff82111715610b6357610b62610b0c565b5b80604052505050565b6000610b76610984565b9050610b828282610b3b565b919050565b600067ffffffffffffffff821115610ba257610ba1610b0c565b5b610bab82610afb565b9050602081019050919050565b82818337600083830152505050565b6000610bda610bd584610b87565b610b6c565b905082815260208101848484011115610bf657610bf5610af6565b5b610c01848285610bb8565b509392505050565b600082601f830112610c1e57610c1d610af1565b5b8135610c2e848260208601610bc7565b91505092915050565b60008060008060808587031215610c5157610c5061098e565b5b6000610c5f87828801610a9c565b9450506020610c7087828801610adc565b935050604085013567ffffffffffffffff811115610c9157610c90610993565b5b610c9d87828801610c09565b925050606085013567ffffffffffffffff811115610cbe57610cbd610993565b5b610cca87828801610c09565b91505092959194509250565b6000819050919050565b610ce981610cd6565b82525050565b6000602082019050610d046000830184610ce0565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d44578082015181840152602081019050610d29565b83811115610d53576000848401525b50505050565b6000610d6482610d0a565b610d6e8185610d15565b9350610d7e818560208601610d26565b610d8781610afb565b840191505092915050565b60006020820190508181036000830152610dac8184610d59565b905092915050565b600060208284031215610dca57610dc961098e565b5b6000610dd884828501610a9c565b91505092915050565b600080fd5b600080fd5b60008083601f840112610e0157610e00610af1565b5b8235905067ffffffffffffffff811115610e1e57610e1d610de1565b5b602083019150836001820283011115610e3a57610e39610de6565b5b9250929050565b60008060008060408587031215610e5b57610e5a61098e565b5b600085013567ffffffffffffffff811115610e7957610e78610993565b5b610e8587828801610deb565b9450945050602085013567ffffffffffffffff811115610ea857610ea7610993565b5b610eb487828801610deb565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000610ee982610ec2565b610ef38185610ecd565b9350610f03818560208601610d26565b610f0c81610afb565b840191505092915050565b60006020820190508181036000830152610f318184610ede565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f8057607f821691505b60208210811415610f9457610f93610f39565b5b50919050565b6000610fa68385610ecd565b9350610fb3838584610bb8565b610fbc83610afb565b840190509392505050565b60006040820190508181036000830152610fe2818688610f9a565b90508181036020830152610ff7818486610f9a565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61103a81610a73565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061108882610d0a565b611092818561106c565b93506110a2818560208601610d26565b6110ab81610afb565b840191505092915050565b60006110c2838361107d565b905092915050565b6000602082019050919050565b60006110e282611040565b6110ec818561104b565b9350836020820285016110fe8561105c565b8060005b8581101561113a578484038952815161111b85826110b6565b9450611126836110ca565b925060208a01995050600181019050611102565b50829750879550505050505092915050565b61115581610998565b82525050565b600060a0820190506111706000830188611031565b818103602083015261118281876110d7565b905081810360408301526111968186610ede565b90506111a5606083018561114c565b81810360808301526111b78184610ede565b90509695505050505050565b7f5369676e617475726556657269666965723a20496e76616c696420736967617460008201527f7572650000000000000000000000000000000000000000000000000000000000602082015250565b600061121f602383610d15565b915061122a826111c3565b604082019050919050565b6000602082019050818103600083015261124e81611212565b9050919050565b600081905092915050565b7f1900000000000000000000000000000000000000000000000000000000000000600082015250565b6000611296600283611255565b91506112a182611260565b600282019050919050565b60008160601b9050919050565b60006112c4826112ac565b9050919050565b60006112d6826112b9565b9050919050565b6112ee6112e982610a73565b6112cb565b82525050565b60008160c01b9050919050565b600061130c826112f4565b9050919050565b61132461131f82610ab1565b611301565b82525050565b6000819050919050565b61134561134082610cd6565b61132a565b82525050565b600061135682611289565b915061136282876112dd565b6014820191506113728286611313565b6008820191506113828285611334565b6020820191506113928284611334565b60208201915081905095945050505050565b6000806000606084860312156113bd576113bc61098e565b5b600084013567ffffffffffffffff8111156113db576113da610993565b5b6113e786828701610c09565b93505060206113f886828701610adc565b925050604084013567ffffffffffffffff81111561141957611418610993565b5b61142586828701610c09565b9150509250925092565b7f5369676e617475726556657269666965723a205369676e61747572652065787060008201527f6972656400000000000000000000000000000000000000000000000000000000602082015250565b600061148b602483610d15565b91506114968261142f565b604082019050919050565b600060208201905081810360008301526114ba8161147e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000611526601883610d15565b9150611531826114f0565b602082019050919050565b6000602082019050818103600083015261155581611519565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000611592601f83610d15565b915061159d8261155c565b602082019050919050565b600060208201905081810360008301526115c181611585565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000611624602283610d15565b915061162f826115c8565b604082019050919050565b6000602082019050818103600083015261165381611617565b9050919050565b600060ff82169050919050565b6116708161165a565b82525050565b600060808201905061168b6000830187610ce0565b6116986020830186611667565b6116a56040830185610ce0565b6116b26060830184610ce0565b9594505050505056fea26469706673582212202d9d2b82dd2aeb960afdb9fab827307aabb0c85096bdad31bce02c27e51443aa64736f6c634300080a0033";
abi = [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_signers",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "string[]",
          "name": "urls",
          "type": "string[]"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "bytes4",
          "name": "callbackFunction",
          "type": "bytes4"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "OffchainLookup",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "signers",
          "type": "address[]"
        }
      ],
      "name": "NewSigners",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "expires",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "request",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "name": "makeSignatureHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "name",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "resolve",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "response",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "resolveWithProof",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "signers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "url",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ];
  
//to create 'signer' object;here 'account'
// const mnemonic = "<see-phrase>" // seed phrase for your Metamask account
const provider = new ethers.providers.JsonRpcProvider("https://eth-goerli.g.alchemy.com/v2/<KEY>");
// const wallet = ethers.Wallet.fromMnemonic(mnemonic);
const account = new ethers.Wallet("<PRIVATE-KEY>", provider);;
  
const myContract = new ethers.ContractFactory(abi, bytecode, account);
  
//Ussing async-await for deploy method
async function main() {
  // If your contract requires constructor args, you can specify them here
  const contract = await myContract.deploy(
    "https://bico-ens-resolver.vercel.app/{sender}/{data}.json",
    ['0x1Cb30cb181D7854F91c2410BD037E6F42130e860']
  );
  
  console.log(contract.address);
  console.log(contract.deployTransaction);
}
    
main();